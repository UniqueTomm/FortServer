@using FortBackend.src.App.Utilities.Helpers
@using FortBackend.src.App.Utilities.Saved
@using Newtonsoft.Json
@using FortBackend.src.App.Utilities.Helpers.Cached
@using FortBackend.src.XMPP.Data
@using FortLibrary.ConfigHelpers



@model FortBackend.src.App.Routes.ADMIN.DashboardContentController

@{
    string DeserializeGameConfig = JsonConvert.SerializeObject(Saved.DeserializeGameConfig);

    var INdexIg = -1;
    int counter2 = 0;

    var Tab = -1;

    bool ForcedSeason = Saved.DeserializeGameConfig.ForceSeason;
    int SeasonForced = Saved.DeserializeGameConfig.Season;

}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="/css/BootStrap.css" rel="stylesheet" crossorigin="anonymous">
    <link href="/css/content.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="d-flex" style="height: 100%;">
        <div class="d-flex flex-column flex-shrink-0 p-3 text-bg-dark position-fixed" style="width: 280px; height: 100%; overflow-y: auto;">
            <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
                <svg class="bi pe-none me-2" width="40" height="32"><use xlink:href="#bootstrap"></use></svg>
                <span class="fs-4">FortBackend</span>
            </a>
            <hr>
            <ul class="nav nav-pills flex-column mb-auto" style="overflow-y: auto;">
                <li class="nav-item">
                    <a href="/admin/dashboard/home" class="nav-link text-white" aria-current="page">
                         <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house" viewBox="0 0 16 16">
                          <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5z"/>
                        </svg>
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/dashboard/content" class="nav-link text-white active" onclick="changeTab(false)">
                         <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-window-stack" viewBox="0 0 16 16">
                          <path d="M4.5 6a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1M6 6a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1m2-.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0"/>
                          <path d="M12 1a2 2 0 0 1 2 2 2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2 2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zM2 12V5a2 2 0 0 1 2-2h9a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1m1-4v5a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V8zm12-1V5a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v2z"/>
                        </svg>
                        Content Management
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/dashboard/panel" class="nav-link text-white">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-layout-text-window" viewBox="0 0 16 16">
                          <path d="M3 6.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 3a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z"/>
                          <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm12 1a1 1 0 0 1 1 1v1H1V2a1 1 0 0 1 1-1zm1 3v10a1 1 0 0 1-1 1h-2V4zm-4 0v11H2a1 1 0 0 1-1-1V4z"/>
                        </svg>
                        Admin Panel
                    </a>
                </li>
            </ul>

            <div class="dropdown mt-auto">
                <hr>
                <a href="/admin/dashboard/content" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <strong>@ViewData["Username"]!</strong>
                </a>
                <ul class="dropdown-menu dropdown-menu-dark text-small shadow">
                    <li><a class="dropdown-item" href="#">Idrk</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="/admin/logout">Sign out</a></li>
                </ul>
            </div>
        </div>

        <div class="flex-grow-1 p-3 text-white" style="margin-left: 280px;">
            <div class="tab-pane fade show active" id="content-tab" role="tabpanel" aria-labelledby="content-tab">
                <h1>Content Management</h1>

                <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <a class="nav-link" id="servers-tab" href="/admin/dashboard/content/news" role="tab" aria-controls="servers" aria-selected="false">
                        News Updates
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="servers-tab" data-bs-toggle="tab" data-bs-target="#servers" type="button" role="tab" aria-controls="servers" aria-selected="false">Server Management</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="inimanagement-tab" data-bs-toggle="tab" data-bs-target="#inimanagement" type="button" role="tab" aria-controls="inimanagement" aria-selected="false">INI Management</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="shop-tab" data-bs-toggle="tab" data-bs-target="#shop" type="button" role="tab" aria-controls="shop" aria-selected="false">Shop Configuration</button>
                    </li>
                </ul>
               
                <div class="tab-content mt-4">
                    <div class="tab-pane fade show active" id="servers" role="tabpanel" aria-labelledby="servers-tab">

                            <h2>Server Management</h2>

                            <table class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Body</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Forced Season</td>
                                        <td>Choose/Set Forced Season</td>
                                        <td>
                                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editModal" onclick="populateModalForEdit('forcedseason', -1)">Edit</button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>

                        </div>

                    </div>
                </div>
            </div>



            <div class="modal fade  text-white" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel">Edit Item</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="tab-content" id="editTabContent">


                                <div class="dropdown" id="newsList" style="display: none;">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                        Not Selected
                                    </button>
                                    <ul class="dropdown-menu" id="dropdownmenu" aria-labelledby="dropdownMenuButton">
                 

                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#not implemented">Add News Item</a></li>
                                    </ul>

                                    <hr>
                                </div>


                                <div class="dropdown" id="newsList-playlist" style="display: none;">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-playlist" data-bs-toggle="dropdown" aria-expanded="false">
                                        Not Selected
                                    </button>
                                    <ul class="dropdown-menu" id="dropdownmenu-playlist" aria-labelledby="dropdownMenuButton-playlist">
                                        @if (counter2 != 0)
                                        {
                                            counter2 = 0;
                                        }

                                  

                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#not implemented">Add News Item</a></li>
                                    </ul>

                                    <hr>
                                </div>

                                <div class="dropdown" id="IniTest-playlist" style="display: none;">
                                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-ini" data-bs-toggle="dropdown" aria-expanded="false">
                                        Not Selected
                                    </button>
                                    <ul class="dropdown-menu" id="dropdownmenu1-playlist" aria-labelledby="dropdownMenuButton-ini">
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#not implemented">Add News Item</a></li>
                                    </ul>

                                    <hr>
                                </div>

                            </div>



                            <form id="editForm">
                                <input type="hidden" id="editType" name="type">
                                <input type="hidden" id="editIndex" name="index">
                                <div class="mb-3" id="IniUIManager" style="display: none;">
                                    <div class="mb-3">
                                        <label for="editInitText" class="form-label">INI VALUE</label>
                                        <input type="text" class="form-control" id="editInitText" name="title">
                                    </div>

                                    <p>* DONT CHANGE THE VALUES IF YOU DON'T UNDERSTAND HOW THEY WORK (but should be basic to understand) *</p>
                                </div>

                                <div class="mb-3" id="most-average-thingy" style="display: none;">
                                    <div class="mb-3">
                                        <label for="editTitle" class="form-label">Title</label>
                                        <input type="text" class="form-control" id="editTitle" name="title">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editBody" class="form-label">Body</label>
                                        <textarea class="form-control" id="editBody" rows="3" name="body"></textarea>
                                    </div>
                                </div>
                                <div class="mb-3" id="forcedseason-data" style="display: none;">
                                   
                                    <label for="editBody" class="form-label">Forced Season</label>
                                    <div class="dropdown">
                                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-forced" data-bs-toggle="dropdown" aria-expanded="false">
                                            Not Selected (weird)
                                        </button>
                                        <ul class="dropdown-menu" id="dropdownmenu-playlist" aria-labelledby="dropdownMenuButton-forced">
                                            <li><a class="dropdown-item" href="#" onclick="populateModalForEdit('forcedseason', 10)">True</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="populateModalForEdit('forcedseason', 20)">False</a></li>
                                        </ul>

                                      
                                    </div>
                                    <hr>
                                    <label for="editBody" class="form-label">Season</label>
                                    <input type="number" min="0" pattern="^[0-9]" class="form-control" max="100" id="IntNumberOnly" name="title">
                                 </div>

                                
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="populateModalSave()">Save changes</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="populateModalClose()">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

      

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            var indexIg = @INdexIg;
            var BackendConfig = @Html.Raw(DeserializeGameConfig);
            var lastTab = "";
            var newsFiles = [[],[]];
            var IsPlaylist = false;
            var IsForcedSeason = false;


            var TempINICache = "";
            var IndexBefore = -1;
            var TempIniName = "";
            var TempIniTitle = "";
            function populateModalDataIniForEdit(data, Name, Title) {
                TempIniName = Name;
                TempIniTitle = Title;
                TempINICache = data;
                IndexBefore = -1;
                lastTab = "IniChanges";
    
                document.getElementById('dropdownMenuButton').textContent = "Not Selected"
                document.getElementById('dropdownMenuButton-ini').textContent = "Not Selected"
                document.getElementById('dropdownMenuButton-playlist').textContent = "Not Selected"
                document.getElementById('dropdownMenuButton-forced').textContent = "Not Selected"
                document.getElementById('editTitle').value = "";
                document.getElementById('editTitle').disabled = true;
                document.getElementById('editBody').value = "";
                document.getElementById('editBody').disabled = true;
                document.getElementById('IntNumberOnly').value = "";

                var MainBody = document.getElementById('most-average-thingy');
                MainBody.style.display = "none";

                var IniUIManager = document.getElementById('IniUIManager');
                IniUIManager.style.display = "";
                document.getElementById('editInitText').value = "";
                document.getElementById('editInitText').disabled = true;


                var forcedseason_data = document.getElementById('forcedseason-data');
                var newsList_playlist = document.getElementById('newsList-playlist');

                forcedseason_data.style.display = "none";
                newsList_playlist.style.display = 'none';

                var dropdownMenu1 = document.getElementById('IniTest-playlist');
                dropdownMenu1.style.display = "";

                var dropdownMenu = document.getElementById('dropdownmenu1-playlist');
                dropdownMenu.innerHTML = '';

                data.forEach(function (playlist, index) {
                    var listItem = document.createElement('li');
                    var link = document.createElement('a');
                    link.classList.add('dropdown-item');
                    link.href = '#';
                    link.textContent = playlist.Name;
                  
                    link.onclick = function () {
                     populateModalDataIniForEditSelect(index);
                    };
                    listItem.appendChild(link);
                    dropdownMenu.appendChild(listItem);
                });

                var divider = document.createElement('li');
                divider.innerHTML = '<hr class="dropdown-divider">';
                var addNewsItemLink = document.createElement('li');
                addNewsItemLink.innerHTML = '<a class="dropdown-item" href="#not implemented">Add News Item</a>';
                dropdownMenu.appendChild(divider);
                dropdownMenu.appendChild(addNewsItemLink);

                console.log(data);
            }

           
            function populateModalDataIniForEditSelect(index) {
                if (TempINICache != "") {
                    // uipdate stuff here check or <a href="#"></a>
                    if (IndexBefore != -1) {
                        TempINICache[IndexBefore].Value = document.getElementById('editInitText').value
                    }

                    //^^

                    IndexBefore = index;
                    document.getElementById('dropdownMenuButton-ini').textContent = TempINICache[index].Name

                    document.getElementById('editInitText').value = TempINICache[index].Value;
                    document.getElementById('editInitText').disabled = false;
                    console.log(TempINICache[index]);
                }
            }

            function populateModalForEdit(type, index) {
                TempIniName = "";
                TempIniTitle = "";
                IsPlaylist = false;
                IsForcedSeason = false;
                var newsList = document.getElementById('newsList');
                var newsList_playlist = document.getElementById('newsList-playlist');
                var forcedseason_data = document.getElementById('forcedseason-data');
                var most_average_thingy = document.getElementById('most-average-thingy');

                most_average_thingy.style.display = "";
          
            //forcedseason-data
                //var ImageSelect = document.getElementById('image-select');
                //var ImageInputSelect = document.getElementById('imageInput');
                var selectedItem;
                console.log(type); 
                console.log(index);
                lastTab = type;

                forcedseason_data.style.display = "none";
                newsList_playlist.style.display = 'none';

                console.log(BackendConfig);

                if (type === "forcedseason") {
                    IsForcedSeason = true;
                    forcedseason_data.style.display = '';
                    most_average_thingy.style.display = "none";
                    newsList.style.display = 'none';
                    newsList_playlist.style.display = 'none';
                    indexIg = index;
                    
                    if (indexIg == -1) {
                    document.getElementById('dropdownMenuButton-forced').textContent = BackendConfig.ForceSeason ? "True" : "False"
                    }
                    else {
                        if (indexIg == 10) {
                            document.getElementById('dropdownMenuButton-forced').textContent = "True"
                        } else {
                            document.getElementById('dropdownMenuButton-forced').textContent = "False"
                        }
                    }

                    document.getElementById('IntNumberOnly').value = BackendConfig.Season;
                    
                    selectedItem = "s";

                   @(Tab = 5); // not needed + won't be proper during runtime
                }
                else {
                    @(Tab = -1); // won't show nothing
                }
         

                if (selectedItem) {
                   // document.getElementById('dropdownMenuButton').textContent = selectedItem.title
                    document.getElementById('editType').value = type;
                    document.getElementById('editIndex').value = index;
                    
                    $('#editModal').modal('show');
                } else {
                    console.log("-1")
                    // Clear it duh?
                    document.getElementById('dropdownMenuButton').textContent = "Not Selected"
                    document.getElementById('dropdownMenuButton-playlist').textContent = "Not Selected"
                    document.getElementById('dropdownMenuButton-forced').textContent = "Not Selected"
                    document.getElementById('editType').value = type;
                    document.getElementById('editIndex').value = index;
                    document.getElementById('editTitle').value = "";
                    document.getElementById('editTitle').disabled = true;
                    document.getElementById('editBody').value = "";
                    document.getElementById('editBody').disabled = true;
                    document.getElementById('IntNumberOnly').value = "";

                    var IniUIManager = document.getElementById('IniUIManager');
                    IniUIManager.style.display = "none";
                    document.getElementById('editInitText').value = "";
                    document.getElementById('editInitText').disabled = true;
         

                    $('#editModal').modal('show');
                }
            }

            function populateModalClose() {
                @(INdexIg = -1);
                indexIg = @INdexIg;
                TempINICache = ""; // eh
               // newsFiles = [];
            }

            function getAuthToken() {
                var authToken = null;
                document.cookie.split(';').forEach(function (cookie) {
                    var parts = cookie.trim().split('=');
                    if (parts[0] === 'AuthToken') {
                        authToken = parts[1] ? decodeURIComponent(parts[1]) : '';
                        //l
                    }
                });
                return authToken;
            }

            function populateModalSave() {


                // dw chat this is updating it
                var tf = "gg";

           
                if(lastTab == "forcedseason"){
                    BackendConfig.ForceSeason = document.getElementById('dropdownMenuButton-forced').textContent == "True";
                    var TempNum = parseInt(document.getElementById('IntNumberOnly').value);
                    if (!isNaN(TempNum)) {
                        console.log(TempNum);
                        BackendConfig.Season = TempNum
                    }
                }
                

                indexIg = -1;


                $.ajax({
                    url: '/admin/dashboard/content/update',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': getAuthToken()
                    },
                    data: JSON.stringify({
                        data: [],
                        BackendConfig: BackendConfig,
                        IniChanges: { Title: TempIniName, Body: { Name: TempIniTitle, CachedData: TempINICache } }
                    }),
                    success: function (response) {
                        console.log("SAVING");
                        if (response === true) {
                            location.reload();
                        } else {
                            console.log("FALSE");
                        }
                    },
                    error: function () {
                        console.log("Error occurred while updating TempDataV2.");
                    }
                });

            }
        </script>


</body>
</html>
