@using FortBackend.src.App.Utilities.MongoDB.Helpers
@using FortLibrary
@using FortLibrary.Dynamics
@using Newtonsoft.Json
@using FortBackend.src.App.Utilities.Helpers.Cached
@using FortBackend.src.XMPP.Data
@using FortLibrary.ConfigHelpers



@model FortBackend.src.App.Routes.ADMIN.DashboardContentController

@{
    //var NewsData = new ContentConfig();
    string AdminData = JsonConvert.SerializeObject(GrabAdminData.AdminUsers);
   // string AdminUsers = JsonConvert.SerializeObject()
    // if(NewsData == null)
    // {
    //     NewsManager.Init();
    //     NewsData = NewsManager.ContentConfig;
    //     Console.WriteLine("WHY");
    // }
    var INdexIg = -1;
    int counter2 = 0;

    var TempData = AdminData;



    // bool UpdateContent()
    // {
    //     Console.WriteLine("WHY IS THIS BEING CLALED");
    //     if (!string.IsNullOrEmpty(TempDataV2))
    //     {
    //         NewsManager.ContentConfig = JsonConvert.DeserializeObject<ContentConfig>(TempDataV2);
    //         TempDataV2 = "";
    //         return true;
    //     }


    //     return false;
    // }

}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="/css/BootStrap.css" rel="stylesheet" crossorigin="anonymous">
    <style>
        html, body {
            height: 100%;
        }

        body {
            width: auto;
            height: 100%;
            background: #2D3237;
        }

        .nav-tabs .nav-link {
            color: white;
        }

            .nav-tabs .nav-link.active {
                background-color: #007bff;
                border-color: #007bff;
            }

        .table {
            background-color: transparent !important;
        }

        .modal-content {
            background-color: #343a40;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


</head>
<body>
    <div class="d-flex" style="height: 100%;">
        <div class="d-flex flex-column flex-shrink-0 p-3 text-bg-dark position-fixed" style="width: 280px; height: 100%; overflow-y: auto;">
            <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
                <svg class="bi pe-none me-2" width="40" height="32"><use xlink:href="#bootstrap"></use></svg>
                <span class="fs-4">FortBackend</span>
            </a>
            <hr>
            <ul class="nav nav-pills flex-column mb-auto" style="overflow-y: auto;">
                <li class="nav-item">

                    <a href="/admin/dashboard/home" class="nav-link text-white" aria-current="page">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house" viewBox="0 0 16 16">
                          <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L2 8.207V13.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V8.207l.646.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM13 7.207V13.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V7.207l5-5z"/>
                        </svg>
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/dashboard/content" class="nav-link text-white" onclick="changeTab(false)">
                       <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-window-stack" viewBox="0 0 16 16">
                          <path d="M4.5 6a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1M6 6a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1m2-.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0"/>
                          <path d="M12 1a2 2 0 0 1 2 2 2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2 2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zM2 12V5a2 2 0 0 1 2-2h9a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1m1-4v5a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V8zm12-1V5a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v2z"/>
                        </svg>
                        Content Management
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/dashboard/panel" class="nav-link text-white active">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-layout-text-window" viewBox="0 0 16 16">
                          <path d="M3 6.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 3a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z"/>
                          <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm12 1a1 1 0 0 1 1 1v1H1V2a1 1 0 0 1 1-1zm1 3v10a1 1 0 0 1-1 1h-2V4zm-4 0v11H2a1 1 0 0 1-1-1V4z"/>
                        </svg>
                        Admin Panel
                    </a>
                </li>
            </ul>

            <div class="dropdown mt-auto">
                <hr>
                <a href="/admin/dashboard/content" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <strong>@ViewData["Username"]!</strong>
                </a>
                <ul class="dropdown-menu dropdown-menu-dark text-small shadow">
                    <li><a class="dropdown-item" href="#">Idrk</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="/admin/logout">Sign out</a></li>
                </ul>
            </div>
        </div>

        <div class="flex-grow-1 p-3 text-white" style="margin-left: 280px;">
            <div class="tab-pane fade show active" id="content-tab" role="tabpanel" aria-labelledby="content-tab">
                <h1>Admin Panel</h1>

                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="news-tab" data-bs-toggle="tab" data-bs-target="#news" type="button" role="tab" aria-controls="news" aria-selected="true">Admins</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="servers-tab" data-bs-toggle="tab" data-bs-target="#servers" type="button" role="tab" aria-controls="servers" aria-selected="false" disabled>Coming Soon</button>
                    </li>
                </ul>

                <div class="tab-content mt-4" id="myTabContent">
                    <div class="tab-pane fade show active" id="news" role="tabpanel" aria-labelledby="news-tab">
                        @if ((int)ViewData["roleId"] > AdminDashboardRoles.Moderator)
                        {
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">Add</button>
                        }
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Body</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Admin</td>
                                    <td>The Admin Account Is Forced (you cannot edit or delete this)</td>
                                    <td>
                                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editModal" disabled>Edit</button>
                                    </td>
                                </tr>

                                @foreach (var AdminInfo in JsonConvert.DeserializeObject<List<AdminProfileCacheEntry>>(AdminData)!)
                                {
                                    <tr>
                                        <td>@AdminInfo.profileCacheEntry.UserData.Username</td>
                                        @if (AdminInfo.adminInfo.Role == AdminDashboardRoles.Moderator)
                                        {
                                            <td>Moderators cannot 'add' / 'edit' users</td>
                                        }else
                                        {
                                            <td>N/A</td>
                                        }
                                        <td>
                                        @if ((int)ViewData["roleId"] > AdminDashboardRoles.Moderator)
                                        {
                                          <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editUserModal" onclick="populateModalEditUserShow(@JsonConvert.SerializeObject(AdminInfo))">Edit</button>
                                        }else
                                        {
                                             <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editUserModal" disabled>Edit</button>
                                        }
                                 
                                           
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

            
               

                        <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="addModalLabel">Give Admin</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="populateModalClose()"></button>
                                    </div>
                                    <div class="modal-body">
  

                                        <form id="editForm">
                                            <input type="hidden" id="editType" name="type">
                                            <input type="hidden" id="editIndex" name="index">
                                            <p>* ADDING WRONG IDS, SAME IDS COULD BE TERRIBLE *</p>
                                            <div class="mb-3">
                                                <label for="editDiscordId" class="form-label">Discord ID</label>
                                                <input type="text" class="form-control" id="editDiscordId" name="title">
                                            </div>

                                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="populateModalSave()">Add Account</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editUserModalLabel">Editing User</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <ul class="nav nav-tabs" id="editUserTabs" role="tablist">
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab" aria-controls="details" aria-selected="true">Details</button>
                                            </li>
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link" id="roles-tab" data-bs-toggle="tab" data-bs-target="#roles" type="button" role="tab" aria-controls="roles" aria-selected="false">Roles</button>
                                            </li>
                                        </ul>
                                        <hr />
                                        <div class="tab-content" id="editUserTabsContent">
                                            <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
                                                <form id="editForm">
                                                    <input type="hidden" id="editType" name="type">
                                                    <input type="hidden" id="editIndex" name="index">
                                                    <div class="mb-3">
                                                        <label for="editUsersEmail" class="form-label">Email</label>
                                                        <input type="email" class="form-control" id="editUsersEmail" placeholder="uh" disabled>
                                                    </div>
                                                </form>
                                            </div>

                                            <div class="tab-pane fade" id="roles" role="tabpanel" aria-labelledby="roles-tab">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="RoleIdRadios" id="AdminRadio1" value="option1">
                                                    <label class="form-check-label" for="AdminRadio1">
                                                        Admin
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="RoleIdRadios" id="ModeratorRadio1" value="option2">
                                                    <label class="form-check-label" for="ModeratorRadio1">
                                                        Moderators
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="populateModalEditPanelSave()">Save changes</button>
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="populateModalClose()">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="tab-pane fade" id="servers" role="tabpanel" aria-labelledby="servers-tab">

                            <h2>Server Management</h2>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

        @if ((int)ViewData["roleId"] > AdminDashboardRoles.Moderator)
        {
            <script>
                // WONT SHOW IF YOU ARE NOT A MODERATOR (dont demote your self);

                var TempData = "";
                function populateModalEditPanelSave() {
                    if (TempData != "") {
                        //populateModalEditPanelSave
                        var adminRadio = document.getElementById('AdminRadio1');
                        var moderatorRadio = document.getElementById('ModeratorRadio1');
                        //var editUsersBox = document.getElementById('editUsersEmail');

                        //TempData.profileCacheEntry.UserData.Email = editUsersBox.value

                        if (adminRadio.checked) {
                            TempData.adminInfo.Role = @AdminDashboardRoles.Admin;
                        }
                        else {
                            TempData.adminInfo.Role = @AdminDashboardRoles.Moderator;
                        }

                        $.ajax({
                            url: '/admin/dashboard/panel/user/edit',
                            type: 'POST',
                            contentType: 'application/json',
                            headers: {
                                'Authorization': getAuthToken()
                            },
                            data: JSON.stringify({ data: TempData }),
                            success: function (response) {
                                console.log("SAVING");
                                if (response === true) {
                                    location.reload();
                                } else {
                                    console.log("FALSE");
                                }
                            },
                            error: function () {
                                console.log("Error occurred while updating TempDataV2.");
                            }
                        });
                    }
                }

                function populateModalSave() {


                    //editDiscordId

                    indexIg = -1;


                    $.ajax({
                        url: '/admin/dashboard/panel/grant',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: {
                            'Authorization': getAuthToken()
                        },
                        data: JSON.stringify({ data: document.getElementById('editDiscordId').value }),
                        success: function (response) {
                            console.log("SAVING");
                            if (response === true) {
                                console.log("TRUE");
                            } else {
                                console.log("FALSE");
                            }
                        },
                        error: function () {
                            console.log("Error occurred while updating TempDataV2.");
                        }
                    });

                    document.getElementById('editDiscordId').value = "";


                }


                function populateModalEditUserShow(UserData) {
                    TempData = UserData;
                    var adminRadio = document.getElementById('AdminRadio1');
                    var moderatorRadio = document.getElementById('ModeratorRadio1');
                    var editUsersBox = document.getElementById('editUsersEmail');


                    editUsersBox.value = UserData.profileCacheEntry.UserData.Email;


                    if (UserData.adminInfo.Role == @AdminDashboardRoles.Admin) {
                        moderatorRadio.checked = false;
                        adminRadio.checked = true;
                    } else {
                        moderatorRadio.checked = true;
                        adminRadio.checked = false;
                    }
                }
            </script>
        }
        <script>

            

            function populateModalClose() {
                document.getElementById('editDiscordId').value = "";
            }

            function getAuthToken() {
                var authToken = null;
                document.cookie.split(';').forEach(function (cookie) {
                    var parts = cookie.trim().split('=');
                    if (parts[0] === 'AuthToken') {
                        authToken = parts[1] ? decodeURIComponent(parts[1]) : '';
                        //l
                    }
                });
                return authToken;
            }

          
        </script>


</body>
</html>
